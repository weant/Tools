package com.hcop.ptn.common.jcorba;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import org.omg.CosEventComm.Disconnected;import org.omg.CosNotification.EventType;import org.omg.CosNotification.StructuredEvent;import org.omg.CosNotifyComm.InvalidEventType;import org.omg.CosNotifyComm.SequencePushConsumerPOA;public class NotifConsumer extends SequencePushConsumerPOA {	private static Log log = LogFactory.getLog(NotifChannelAdmin.class);	private Object syncObj = new Object();	private String _nmsName;		private NotifHandler _eventHandler = null;	NotifConsumer(String nmsName) {		_nmsName = nmsName;	}		public void setEventHandler(NotifHandler eventHandler) {		_eventHandler = eventHandler;	}	@Override	public void disconnect_sequence_push_consumer() {		log.error( "disconnect_sequence_push_consumer" );	}	@Override	public void push_structured_events(StructuredEvent[] events) throws Disconnected { 		synchronized(syncObj) {//			for (StructuredEvent event : events) {////				String typeName = event.header.fixed_header.event_type.type_name;////		        //				try{//					_eventHandler.handle(_nmsName, event);//				} catch (Throwable e){//					log.error("unexpected exception", e);//				}//		       ////		        }//			}			_eventHandler.handle(_nmsName, events, true);		}	}	@Override	public void offer_change(EventType[] eventType, EventType[] event) throws InvalidEventType {	}}