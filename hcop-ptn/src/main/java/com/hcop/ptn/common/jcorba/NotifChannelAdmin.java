package com.hcop.ptn.common.jcorba;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import org.omg.CORBA.ORBPackage.InvalidName;import org.omg.CosEventChannelAdmin.AlreadyConnected;import org.omg.CosEventChannelAdmin.TypeError;import org.omg.CosNaming.NamingContextExt;import org.omg.CosNaming.NamingContextExtHelper;import org.omg.CosNaming.NamingContextPackage.CannotProceed;import org.omg.CosNaming.NamingContextPackage.NotFound;import org.omg.CosNotifyChannelAdmin.AdminLimitExceeded;import org.omg.CosNotifyChannelAdmin.ClientType;import org.omg.CosNotifyChannelAdmin.EventChannel;import org.omg.CosNotifyChannelAdmin.EventChannelHelper;import org.omg.CosNotifyChannelAdmin.SequenceProxyPushSupplier;import org.omg.CosNotifyChannelAdmin.SequenceProxyPushSupplierHelper;import org.omg.PortableServer.POAManagerPackage.AdapterInactive;import org.omg.PortableServer.POAPackage.ServantAlreadyActive;import org.omg.PortableServer.POAPackage.WrongPolicy;public class NotifChannelAdmin {	private static Log log = LogFactory.getLog(NotifChannelAdmin.class);		private NotifConsumer consumer = null;	private NamingContextExt nameCtx = null;	private SequenceProxyPushSupplier proxySupplier = null;	private EventChannel channel = null;		private static NotifChannelAdmin _instance = null;//    private NotifConsumer consumer = null;	/*private NotifChannelAdmin() {	}		public static NotifChannelAdmin instance() {		if (_instance == null) {			_instance = new NotifChannelAdmin();		}		return _instance;	}*/		public NotifConsumer getConsumer() {		return consumer;	}	public void setConsumer(NotifConsumer consumer) {		this.consumer = consumer;	}	public NamingContextExt getNameCtx() {		return nameCtx;	}	public void setNameCtx(NamingContextExt nameCtx) {		this.nameCtx = nameCtx;	}	public SequenceProxyPushSupplier getProxySupplier() {		return proxySupplier;	}	public void setProxySupplier(SequenceProxyPushSupplier proxySupplier) {		this.proxySupplier = proxySupplier;	}	public EventChannel getChannel() {		return channel;	}	public void setChannel(EventChannel channel) {		this.channel = channel;	}		public void connect(String host, int nsPort, String eventChannelName, String nmsName, NotifHandler notifHandler) 			throws InvalidName, AdapterInactive, 			org.omg.CosNaming.NamingContextPackage.InvalidName, 			NotFound, CannotProceed, ServantAlreadyActive, WrongPolicy, 			AdminLimitExceeded, AlreadyConnected, TypeError {		//NotifConsumer consumer = null;//		if (consumer != null) {//			consumer.disconnect_sequence_push_consumer();//			consumer = null;//		}                String nsURL = "corbaloc:iiop:" + host + ":" + nsPort + "/DefaultNamingContext";        log.info(nsURL);		nameCtx = NamingContextExtHelper.narrow(ORBWrapper.instance().getORB().string_to_object(nsURL));		org.omg.CORBA.Object obj = Utilities.resolveNSPath(nameCtx, eventChannelName);		channel = EventChannelHelper.narrow(obj);				org.omg.CORBA.IntHolder id = new org.omg.CORBA.IntHolder();        proxySupplier = SequenceProxyPushSupplierHelper.narrow(         		channel.default_consumer_admin().obtain_notification_push_supplier(        				ClientType.SEQUENCE_EVENT, id ) );                consumer = new NotifConsumer(nmsName);        ORBWrapper.instance().getRootPOA().activate_object(consumer);        proxySupplier.connect_sequence_push_consumer(consumer._this());        consumer.setEventHandler(notifHandler);        log.info("Event Channal init OK!");	}	}